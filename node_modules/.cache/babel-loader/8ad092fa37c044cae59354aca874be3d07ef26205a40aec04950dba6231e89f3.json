{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-44aa9de9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\", \"id\"];\nconst _hoisted_2 = [\"for\"];\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_container = _resolveComponent(\"container\");\n  return _openBlock(), _createElementBlock(\"form\", null, [_createElementVNode(\"p\", null, _toDisplayString($props.quest.id), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.quest.answers, (ans, key, index) => {\n    return _openBlock(), _createBlock(_component_container, {\n      key: key\n    }, {\n      default: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n        type: \"radio\",\n        name: \"index\",\n        value: ans.correct,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.answer = $event),\n        onChange: _cache[1] || (_cache[1] = $event => $options.submit($props.quest.id)),\n        id: key\n      }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1), [[_vModelRadio, $data.answer]]), _createElementVNode(\"label\", {\n        for: key\n      }, _toDisplayString(ans.text), 9 /* TEXT, PROPS */, _hoisted_2), _hoisted_3]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_4, _createElementVNode(\"span\", null, _toDisplayString($data.answer), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;mBAAA;mBAAA;gEAAgPA,oBAAI;gEAAYA,oBAAI;;;;uBAApQC,oBAAoS,eAA9RD,oBAAqB,4BAAfE,YAAK,CAACC,EAAE,qCAAOF,oBAAqOG,iBAAhQC,YAAiEH,YAAK,CAACI,OAAO,EAA9E,CAA8CC,GAAG,EAACC,GAAG,EAAEC,KAAK;yBAAjCC,aAAqOC;MAA/KH,GAAG,EAAEA;IAAG;MAAzFI,kBAA2F,MAA4G,iBAA5GZ,oBAA4G;QAArGa,IAAI,EAAC,OAAO;QAACC,IAAI,EAAC,OAAO;QAAEC,KAAK,EAAER,GAAG,CAACS,OAAO;QAA/I,2DAA0JC,YAAM;QAAGC,QAAM,sCAAEC,eAAM,CAACjB,YAAK,CAACC,EAAE;QAAIA,EAAE,EAAEK;+CAAlMY,6BAA0JH,YAAM,KAAuCjB,oBAAyC;QAAjCqB,GAAG,EAAEb;MAAG,oBAAMD,GAAG,CAACe,IAAI,wBAArOC,aAAgPC,UAAI;MAApPC;;kCAAgQC,UAAI,sBAAyB,+BAAhBT,YAAM","names":["_createElementVNode","_createElementBlock","$props","id","_Fragment","_renderList","answers","ans","key","index","_createBlock","_component_container","default","type","name","value","correct","$data","onChange","$options","_hoisted_1","for","text","_hoisted_2","_hoisted_3","_","_hoisted_4"],"sources":["D:\\MySites\\anym\\src\\components\\QuestRadio.vue"],"sourcesContent":["<form><p>{{ quest.id }}</p><container v-for=\"(ans,key, index) in quest.answers\" :key=\"key\"><input type=\"radio\" name=\"index\" :value=\"ans.correct\" v-model=\"answer\" @change=\"submit(quest.id)\" :id=\"key\"><label :for=\"key\">{{  ans.text }}</label><br></container><br><span>{{ answer }}</span></form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}