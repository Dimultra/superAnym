{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-44aa9de9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\", \"id\"];\nconst _hoisted_2 = [\"for\"];\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_container = _resolveComponent(\"container\");\n  return _openBlock(), _createElementBlock(\"form\", null, [_createElementVNode(\"p\", null, _toDisplayString($props.quest.id), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.quest.answers, (ans, index) => {\n    return _openBlock(), _createBlock(_component_container, null, {\n      default: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n        type: \"radio\",\n        name: \"index\",\n        value: ans.correct,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.answer = $event),\n        onChange: _cache[1] || (_cache[1] = $event => $options.submit($props.quest.id)),\n        id: ans.id / index\n      }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1), [[_vModelRadio, $data.answer]]), _createElementVNode(\"label\", {\n        for: ans.id / index\n      }, _toDisplayString(ans.text), 9 /* TEXT, PROPS */, _hoisted_2), _hoisted_3]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 256 /* UNKEYED_FRAGMENT */)), _hoisted_4, _createElementVNode(\"span\", null, _toDisplayString($data.answer), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;mBAAA;mBAAA;gEAAuPA,oBAAI;gEAAYA,oBAAI;;;;uBAA3QC,oBAA2S,eAArSD,oBAAqB,4BAAfE,YAAK,CAACC,EAAE,qCAAOF,oBAA4OG,iBAAvQC,YAA6DH,YAAK,CAACI,OAAO,EAA1E,CAA8CC,GAAG,EAAEC,KAAK;yBAA7BC,aAA4OC;MAAvQC,kBAA4E,MAAuH,iBAAvHX,oBAAuH;QAAhHY,IAAI,EAAC,OAAO;QAACC,IAAI,EAAC,OAAO;QAAEC,KAAK,EAAEP,GAAG,CAACQ,OAAO;QAAhI,2DAA2IC,YAAM;QAAGC,QAAM,sCAAEC,eAAM,CAAChB,YAAK,CAACC,EAAE;QAAIA,EAAE,EAAEI,GAAG,CAACJ,EAAE,GAAGK;+CAA5LW,6BAA2IH,YAAM,KAAkDhB,oBAAoD;QAA5CoB,GAAG,EAAEb,GAAG,CAACJ,EAAE,GAAGK;0BAAWD,GAAG,CAACc,IAAI,wBAA5OC,aAAuPC,UAAI;MAA3PC;;oCAAuQC,UAAI,sBAAyB,+BAAhBT,YAAM","names":["_createElementVNode","_createElementBlock","$props","id","_Fragment","_renderList","answers","ans","index","_createBlock","_component_container","default","type","name","value","correct","$data","onChange","$options","_hoisted_1","for","text","_hoisted_2","_hoisted_3","_","_hoisted_4"],"sources":["D:\\MySites\\anym\\src\\components\\QuestRadio.vue"],"sourcesContent":["<form><p>{{ quest.id }}</p><container v-for=\"(ans, index) in quest.answers\"><input type=\"radio\" name=\"index\" :value=\"ans.correct\" v-model=\"answer\" @change=\"submit(quest.id)\" :id=\"ans.id / index\"><label :for=\"ans.id / index\">{{  ans.text }}</label><br></container><br><span>{{ answer }}</span></form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}