{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = [\"value\", \"id\"];\nconst _hoisted_2 = [\"for\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_container = _resolveComponent(\"container\");\n  return _openBlock(), _createElementBlock(\"form\", null, [_createElementVNode(\"h3\", null, _toDisplayString($props.quest.id), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.quest.answers, (ans, index) => {\n    return _openBlock(), _createBlock(_component_container, {\n      class: \"form-check\"\n    }, {\n      default: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n        class: \"form-check-input\",\n        type: \"radio\",\n        name: \"index\",\n        value: ans.id,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.answerID = $event),\n        onChange: _cache[1] || (_cache[1] = $event => $options.submit()),\n        id: ans.text\n      }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1), [[_vModelRadio, $data.answerID]]), _createElementVNode(\"label\", {\n        class: \"form-check-label\",\n        for: ans.text\n      }, _toDisplayString(ans.text), 9 /* TEXT, PROPS */, _hoisted_2), _hoisted_3]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 256 /* UNKEYED_FRAGMENT */)), _hoisted_4]);\n}","map":{"version":3,"mappings":";mBAAA;mBAAA;gCAAuSA,oBAAI;gCAAYA,oBAAI;;;;uBAA3TC,oBAAkU,eAA5TD,oBAAuB,6BAAhBE,YAAK,CAACC,EAAE,qCAAQF,oBAA0RG,iBAAvTC,YAAkFH,YAAK,CAACI,OAAO,EAA/F,CAAmEC,GAAG,EAAEC,KAAK;yBAAhDC,aAA0RC;MAA/QC,KAAK,EAAC;IAAY;MAA1DC,kBAAiG,MAA+H,iBAA/HZ,oBAA+H;QAAxHW,KAAK,EAAC,kBAAkB;QAACE,IAAI,EAAC,OAAO;QAACC,IAAI,EAAC,OAAO;QAAEC,KAAK,EAAER,GAAG,CAACJ,EAAE;QAAzK,2DAAoLa,cAAQ;QAAGC,QAAM,sCAAEC,eAAM;QAAKf,EAAE,EAAEI,GAAG,CAACY;+CAA1NC,6BAAoLJ,cAAQ,KAAoChB,oBAAuE;QAAhEW,KAAK,EAAC,kBAAkB;QAAEU,GAAG,EAAEd,GAAG,CAACY;0BAAUZ,GAAG,CAACY,IAAI,wBAA5RG,aAAuSC,UAAI;MAA3SC;;oCAAuTC,UAAI","names":["_createElementVNode","_createElementBlock","$props","id","_Fragment","_renderList","answers","ans","index","_createBlock","_component_container","class","default","type","name","value","$data","onChange","$options","text","_hoisted_1","for","_hoisted_2","_hoisted_3","_","_hoisted_4"],"sources":["D:\\MySites\\anym\\src\\components\\QuestRadio.vue"],"sourcesContent":["<form><h3>{{ quest.id }}</h3><container class=\"form-check\" v-for=\"(ans, index) in quest.answers\"><input class=\"form-check-input\" type=\"radio\" name=\"index\" :value=\"ans.id\" v-model=\"answerID\" @change=\"submit()\" :id=\"ans.text\"><label class=\"form-check-label\" :for=\"ans.text\">{{  ans.text }}</label><br></container><br></form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}